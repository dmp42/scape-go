#!/usr/bin/env bash

# Get previously set go version out
_GO_VERSION=$(cat ~/go_version 2>/dev/null || echo future)

# Start gvm
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

#Â Use requested go version
gvm use $_GO_VERSION &> /dev/null

# Link repo into gopath for go version
if [[ ! -d $GOPATH/src/github.com/${MY_REPO} ]]; then
    mkdir -p $GOPATH/src/github.com/${MY_REPO%%/*}
    ln -s /src $GOPATH/src/github.com/${MY_REPO}
fi

# cd there
cd $GOPATH/src/github.com/${MY_REPO}

# Be sure to handle vendorized deps
GO15VENDOREXPERIMENT=1

# If this is the first time we run, get the package list for later use
if [[ ! -f ~/package_list ]]; then
    echo $(go list -tags "$MY_BUILDTAGS" ./... | grep -v ^github.com/${MY_REPO}/vendor) > ~/package_list
fi

MY_PKGS=$(cat ~/package_list)

eval "$@"

_ACTUAL_VERSION=$(gvm list | grep "=>")
echo ${_ACTUAL_VERSION#* } > ~/go_version